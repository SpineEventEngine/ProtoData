/*
 * Copyright 2024, TeamDev. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

syntax = "proto3";

package spine.protodata.backend.given;

import "spine/options.proto";

option (type_url_prefix) = "type.spine.io";
option java_package = "io.spine.protodata.backend.given";
option java_outer_classname = "PipelineFilteringSpecProto";
option java_multiple_files = true;

import "google/protobuf/empty.proto";

// This file defines several message types, enum types, and services
// to be filtered by a pipelines executed by `PipelineFilteringSpec` test suite.

message Message1 {
}

message Message2 {
}

message Message3 {
}

enum EnumType1 {
    ET1_UNDEFINED = 0;
    ET1_1 = 1;
}

enum EnumType2 {
    ET2_UNDEFINED = 0;
    ET2_1 = 1;
}

enum EnumType3 {
    ET3_UNDEFINED = 0;
    ET3_1 = 1;
}

service Service1 {
    rpc Do(google.protobuf.Empty) returns (google.protobuf.Empty);
}

service Service2 {
    rpc Do(google.protobuf.Empty) returns (google.protobuf.Empty);
}

service Service3 {
    rpc Do(google.protobuf.Empty) returns (google.protobuf.Empty);
}
