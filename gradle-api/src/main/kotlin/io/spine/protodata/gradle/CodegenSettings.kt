/*
 * Copyright 2024, TeamDev. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

package io.spine.protodata.gradle

import org.gradle.api.file.DirectoryProperty

/**
 * Configures the code generation process performed by ProtoData.
 */
public interface CodegenSettings {

    /**
     * Passes given names of Java classes to ProtoData as
     * the `io.spine.protodata.plugin.Plugin` classes.
     */
    public fun plugins(vararg classNames: String)

    /**
     * Implementations do nothing. Please do not use.
     */
    @Deprecated(message = "Please do not use. Option providers are provided via `@AutoService`.")
    public fun optionProviders(vararg classNames: String)

    /**
     * The subdirectories to which the files generated from Protobuf are placed.
     *
     * If the code files that need processing are placed in a few subdirectories within
     * `$buildDir/generated/source/proto`, (e.g. `java` and `spine`), after processing,
     * the same directory structure is preserved in the [targetBaseDir].
     *
     * The default value is `"java"`.
     */
    public var subDirs: List<String>

    /**
     * The base directory where the files generated by ProtoData are placed.
     *
     * By default, points at the `$projectDir/generated/` directory.
     */
    @Deprecated(message = "Please use `outputBaseDir` instead.", ReplaceWith("outputBaseDir"))
    public var targetBaseDir: Any

    /**
     * The path to the root directory with the generated code.
     *
     * By default, points at the `$projectDir/generated/` directory.
     */
    public val outputBaseDir: DirectoryProperty
}
