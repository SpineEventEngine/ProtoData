/*
 * Copyright 2021, TeamDev. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

syntax = "proto3";

package spine.protodata;

import "spine/options.proto";

option (type_url_prefix) = "type.spine.io";
option java_package = "io.spine.protodata";
option java_outer_classname = "AstProto";
option java_multiple_files = true;

import "google/protobuf/any.proto";

message Path {

    string value = 1;
}

message File {

    Path path = 1;

    string package_name = 2;

    SyntaxVersion syntax = 3;

    repeated Option option = 4;

    enum SyntaxVersion {

        LV_UNDEFINED = 0;

        PROTO2 = 1;

        PROTO3 = 2;
    }
}

message TypeName {

    string value = 1;
}

message MessageType {

    TypeName name = 1;

    string type_url_prefix = 2;

    repeated Field field = 3;

    repeated Group group = 4;
}

enum PrimitiveType {

    PT_UNKNOWN = 0;

    TYPE_DOUBLE = 1;
    TYPE_FLOAT = 2;
    TYPE_INT64 = 3;
    TYPE_UINT64 = 4;
    TYPE_INT32 = 5;
    TYPE_FIXED64 = 6;
    TYPE_FIXED32 = 7;
    TYPE_BOOL = 8;
    TYPE_STRING = 9;
    TYPE_BYTES = 10;
    TYPE_UINT32 = 11;
    TYPE_SFIXED32 = 12;
    TYPE_SFIXED64 = 13;
    TYPE_SINT32 = 14;
    TYPE_SINT64 = 15;
}

message Type {

    oneof kind {

        MessageType message = 1;

        PrimitiveType primitive = 2;
    }
}

message Field {

    string name = 1;

    Type type = 2;

    uint32 number = 3;
    uint32 order_of_declaration = 4;

    bool is_list = 5;
    bool is_map = 6;
    PrimitiveType map_key_type = 7;

    repeated Option option = 8;
}

message Group {

    string name = 1;

    repeated Field field = 2;
}

message Option {

    string name = 1;
    uint32 number = 2;

    Type type = 3;

    google.protobuf.Any value = 4;
}

